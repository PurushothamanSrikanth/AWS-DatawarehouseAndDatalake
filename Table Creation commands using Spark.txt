#For DWH
spark.sql("""
WITH random_data AS (
    SELECT
        CAST(ROW_NUMBER() OVER (ORDER BY RAND()) AS STRING) AS id,
        CONCAT('Name_', CAST(FLOOR(RAND() * 10) + 1 AS STRING)) AS Name,
        CONCAT('Address_', CAST(FLOOR(RAND() * 10) + 1 AS STRING)) AS Address,
        CONCAT('PAN_', CAST(FLOOR(RAND() * 10) + 1 AS STRING)) AS PAN,
        CAST(FLOOR(RAND() * 10000000000) AS DECIMAL(10, 0)) AS Phone_Number,
        CASE WHEN RAND() < 0.5 THEN TRUE ELSE FALSE END AS isStudent,
        CAST(FLOOR(RAND() * 100000) AS INT) AS Salary,
        CASE CAST(FLOOR(RAND() * 12) AS INT)
            WHEN 0 THEN 'January'
            WHEN 1 THEN 'February'
            WHEN 2 THEN 'March'
            WHEN 3 THEN 'April'
            WHEN 4 THEN 'May'
            WHEN 5 THEN 'June'
            WHEN 6 THEN 'July'
            WHEN 7 THEN 'August'
            WHEN 8 THEN 'September'
            WHEN 9 THEN 'October'
            WHEN 10 THEN 'November'
            ELSE 'December'
        END AS Month
    FROM (
        SELECT 1 AS n UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5
        UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9 UNION ALL SELECT 10
    ) AS numbers
)

-- Insert the generated data into the table
INSERT OVERWRITE TABLE test.`user` PARTITION (Month)
SELECT * FROM random_data LIMIT 500;
""")




#For DL
spark.sql("""
INSERT INTO test.`user` PARTITION (Month='YourMonth')
SELECT
    row_number() OVER (ORDER BY rand()) AS id,
    concat('Name_', row_number() OVER (ORDER BY rand())) AS Name,
    concat('Address_', row_number() OVER (ORDER BY rand())) AS Address,
    concat('PAN_', row_number() OVER (ORDER BY rand())) AS PAN,
    cast(floor(rand() * 10000000000) AS DECIMAL(10, 0)) AS Phone_Number,
    CAST(CASE WHEN row_number() OVER (ORDER BY rand()) % 2 = 0 THEN true ELSE false END AS BOOLEAN) AS isStudent,
    cast(floor(rand() * 100000) AS INT) AS Salary
FROM (
    -- This subquery generates a large range of random values and then limits the result to 500 rows
    SELECT rand() as rand FROM test.`user` SORT BY rand LIMIT 500
) unique_data;
""")